#!/bin/sh

#  pnd-namespace-compile-post.sh
#
#  Created by Arkadi Yoskovitz on 2022/01/08.
#  
########################################################################################################################

# Global instructions
# ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
# This is a helper script to be used when you wish to refresh the Pendo Texture wrapper
# 1. Start by compiling the Texture product once, so that the script will have a binary to work with.
# 2. Comment out the "ALREADY_INVOKED_POST=true" line to allow the system to activly run the header generation code.
# 3. Compile the target again, this will override the content of the generated Namespace header with updated symbols
# 4. Comment in the "ALREADY_INVOKED_POST=true" line to disable the generations system.
# 5. Make sure to check that the following importstetment is the first one in the AsyncDisplayKit header file, 
#       #import <AsyncDisplayKit/PNDTexture+Namespace.h>
# 6. Add the stetment if needed, this should be done manualy
# 7. Make sure the same statement is in the Texture-prefix.pch file, this should be done via podspec menipulation
# ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
function main() {
    
    ALREADY_INVOKED_POST="true"
    # Stop the script if we already have a prepared framework
    if [[ "true" == ${ALREADY_INVOKED_POST:-false} ]]; then
        echo "Stopping post compile script"
    else
        export ALREADY_INVOKED_POST="true"
        set -e
        echo " "
        echo " ▸▸ Running script: Pre-pod creation script"
        echo " "
        echo " ======================================================================================================= "
        echo " ▸ 01 - Delete generated header if it exists"
        echo " ======================================================================================================= "
        echo " ▸ "
        header=$PODS_TARGET_SRCROOT/Source/PND$PRODUCT_NAME+Namespace.h
        location=$CODESIGNING_FOLDER_PATH
        echo " "
        echo " ======================================================================================================= "
        echo " ▸ 02 - Generate combined header"
        echo " ======================================================================================================= "
        echo " ▸ "
        generate_header $header $location
        echo " "
        echo " ======================================================================================================= "
        echo " ▸ Finished Pre-pod creation script"
        echo " ======================================================================================================= "
    fi
}
# Generate Header
# ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
function generate_header()
{
    local HEADER_LOCATION="${1}"
    local BINARY_PATH="${2}"
    
    echo " =========================================================================================================== "
    echo " ▸ 01 - Delete generated header if it exists"
    echo " =========================================================================================================== "
    echo " ▸ "
    [ -e HEADER_LOCATION ] && rm HEADER_LOCATION
    echo " "
    echo " ======================================================================================================= "
    echo " ▸ 02 - Generate combined header"
    echo " ======================================================================================================= "
    echo " ▸ "
    echo " ▸ HEADER_LOCATION: ${HEADER_LOCATION}"
    echo " ▸ BINARY_PATH    : ${BINARY_PATH}"
    echo "//
// Copyright 2022 Pendo inc.
// This file has been automatically generated by Pendo' namespacing script.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an \"AS IS\" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// Namespaced Header

#ifndef __PENDO_NAMESPACE_PREFIX_
#error You must define __PENDO_NAMESPACE_PREFIX_ in your project settings in order to use a Pendo namespace.
#else

// MACROS
#ifndef __PENDO_NS_SYMBOL
// We need to have multiple levels of macros here so that __PENDO_NAMESPACE_PREFIX_ is
// properly replaced by the time we concatenate the namespace prefix.
#define __PENDO_NS_REWRITE(namespace,symbol) namespace ## _ ## symbol
#define __PENDO_NS_BRIDGE_(namespace,symbol) __PENDO_NS_REWRITE(namespace,symbol)
#define __PENDO_NS_SYMBOL(symbol           ) __PENDO_NS_BRIDGE_(__PENDO_NAMESPACE_PREFIX_,symbol)
#endif
// MACROS END
    " > $HEADER_LOCATION

    # The following one-liner is a bit of a pain in the ass.
    # Breakdown:
    #
    # nm $CODESIGNING_FOLDER_PATH -j
    # Dump all of the symbols from the compiled library. This will include all UIKit
    # and Foundation symbols as well.
    #
    # | grep "^_OBJC_CLASS_$_"
    # Filter out the interfaces.
    #
    # | grep -v '\$_NS'
    # Remove all Foundation classes.
    #
    # | grep -v '\$_UI'
    # Remove all UIKit classes.
    #
    # | sed -e 's/_OBJC_CLASS_\$_\(.*\)/#ifndef \1\'$'\n''#define \1 __PENDO_NS_SYMBOL(\1)\'$'\n''#endif/g'
    # I use the syntax outlined here:
    # http://stackoverflow.com/questions/6761796/bash-perl-or-sed-insert-on-new-line-after-found-phrase
    # to create newlines so that we can write the following on separate lines:
    #
    #  #ifndef ...
    #  #define ...
    #  #endif
    #

    echo "// Classes"       >> $HEADER_LOCATION
    nm $BINARY_PATH -j | sort | uniq | grep "^_OBJC_CLASS_$_"      | grep -v '\$_NS'                   | grep -v '\$_UI'                   | sed -e 's/_OBJC_CLASS_\$_\(.*\)/#ifndef \1\'$'\n''#define \1 __PENDO_NS_SYMBOL(\1)\'$'\n''#endif/g' >> $HEADER_LOCATION
    echo "// Classes END"   >> $HEADER_LOCATION
    echo ""                 >> $HEADER_LOCATION
    echo "// Functions"     >> $HEADER_LOCATION
    # nm $BINARY_PATH    | sort | uniq | grep ' T ' | cut -d ' ' -f3 | grep -v '\$_NS'                   | grep -v '\$_UI'                   | sed -e 's/_\(.*\)/#ifndef \1\'$'\n''#define \1 __PENDO_NS_SYMBOL(\1)\'$'\n''#endif/g' >> $HEADER_LOCATION
    echo "// Functions END" >> $HEADER_LOCATION
    echo ""                 >> $HEADER_LOCATION
    echo "// Externs"       >> $HEADER_LOCATION
    # nm $BINARY_PATH    | sort | uniq | grep ' D ' | cut -d ' ' -f3 | grep -v '\$_NS'                   | grep -v '\$_UI'                   | sed -e 's/_\(.*\)/#ifndef \1\'$'\n''#define \1 __PENDO_NS_SYMBOL(\1)\'$'\n''#endif/g'>> $HEADER_LOCATION
    # nm $BINARY_PATH    | sort | uniq | grep ' S ' | cut -d ' ' -f3 | grep -v '\$_NS' | grep -v '.eh'   | grep -v '\$_UI' | grep -v 'OBJC_' | sed -e 's/_\(.*\)/#ifndef \1\'$'\n''#define \1 __PENDO_NS_SYMBOL(\1)\'$'\n''#endif/g'>> $HEADER_LOCATION
    echo "// Externs END"   >> $HEADER_LOCATION
    echo ""                 >> $HEADER_LOCATION
    echo "#endif"           >> $HEADER_LOCATION

    echo " "
    echo " ======================================================================================================= "
    echo " ▸ Finished Pre-pod creation script"
    echo " ======================================================================================================= "
}

# Activation
# ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
main
